논리 8. (비대칭의 결정체)

int isPrime(int n)
{
     for (i = 2; i < n; i++)
           if (n % i == 0)
                return 0;
      return 1;
}


 논리 10. (비대칭의 결정)

int isSameArray(int a[], int b[], int aSize, int bSize)
{
      int i;
      if (aSize != bSize)
             return 0;
      else
      {
            for (i = 0; i < n; i++)
                 if (a[i] != b[i])
                      return 0;
            return 1; 
      }
}


논리 12

int searchKeyInArray(int a[], int size, int searchKey)
{
      int i;
      for (i = 0; i < size; i++)
              if (a[i] == searchKey)
                        return i;
      return -1;
} 



논리 11.

내꺼(틀림)
int reverseArray(int list[], int size)
{
      int i, j, temp;
      for (i = 0; i < size; i++)
      {
            for (j = 0; j < size - i; j++)
                   if (list[i] > list[i + 1]
                    {
                          temp = list[i];
                          list[i] = list[i + 1];
                           list[i + 1] = temp;
                     }
         }
}

다른 학우
void reverse(int a[], int size)
{
      int i;
      int temp;
      for (i = 0; i < size / 2; i++)
      {
            temp = a[i];
            a[i] = a[size - i- 1] = temp;
            a[size - i- 1] = temp;
       }
}